{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","mode","setMode","players","setPlayers","roles","setRoles","auth","setAuth","message","setMessage","gameState","setGameState","myState","setMyState","kicked","setKicked","url_components","window","location","pathname","split","length","name","key","useEffect","interval","setInterval","fetch","then","res","json","success","data","clearInterval","custom_content","vote","randels","array","num","Array","map","_","i","Math","floor","random","join","render_vote","players_html","player","onClick","kick","roles_html","Object","keys","role","toggle","className","captain","player_approve_box","toggleProposal","proposal","includes","proposed","actors","player_info_box","skips","votes","vote_details_box","did_vote_box","captain_view","approve_view","failButton","act_view","round","successes","fails","render_round","rounds","render_roundreq","assassin_mode","approved","act","default_name","default_password","id","rows","defaultValue","document","getElementById","value","password","reset_name","reset_button","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","rel","href","integrity","crossOrigin","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e35d5283.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport { Container } from 'react-bootstrap'\n\nfunction App() {\n  const [mode, setMode] = useState('lobby')\n  const [players, setPlayers] = useState([])\n  const [roles, setRoles] = useState({})\n  const [auth, setAuth] = useState(false)\n  const [message, setMessage] = useState(\"\")\n  const [gameState, setGameState] = useState({'round': 0, 'successes': [], 'fails': [], 'mission': 0, 'captain': 0, 'skips': 0, 'proposed': false, 'approved': false, 'proposal': [], 'votes': [], 'hypertext': 'ReactJS is legendary', 'assassin_mode': false, 'rounds': [0, 0, 0, 0, 0], 'actors': []})\n  const [myState, setMyState] = useState({'i': 0, 'roles': [], 'vote': '', 'act': '', 'assassin': false, 'good': true});\n  const [kicked, setKicked] = useState([]);\n  const url_components = window.location.pathname.split('/')\n  let [name, key] = url_components[url_components.length - 1].split('-')\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch('/server/auth/' + name + '/' + key).then(res => res.json()).then(res => setAuth(res.success))\n      fetch('/server/get_mode').then(res => res.json()).then(res => {if (res.success) setMode(res.data)})\n      fetch('/server/lobby/get_players').then(res => res.json()).then(res => {if (res.success) setPlayers(res.data)})\n      fetch('/server/lobby/get_roles').then(res => res.json()).then(res => {if (res.success) setRoles(res.data)})\n      fetch('/server/game/get_game_state/' + name + '/' + key).then(res => res.json()).then(res => {if (res.success) setGameState(res)})\n      fetch('/server/game/get_my_state/' + name + '/' + key).then(res => res.json()).then(res => {if (res.success) setMyState(res)})\n      fetch('/server/get_kicked').then(res => res.json()).then(res => {if (res.success) setKicked(res.data)})\n    }, 500)\n\n    return () => {\n      clearInterval(interval)\n    }\n  })\n\n  let custom_content = null\n\n  const kick = (player) => {\n    fetch('/server/lobby/kick/' + player)\n  }\n\n  const toggle = (role) => {\n    fetch('/server/lobby/toggle/' + role)\n  }\n  \n  const startGame = () => {\n    fetch('/server/lobby/start_game').then(res => res.json()).then(res => setMessage(res.message))\n  }\n\n  const toggleProposal = (player) => {\n    fetch('/server/game/toggle_proposal/' + name + '/' + key + '/' + player)\n  }\n\n  const proposeTeam = () => {\n    fetch('/server/game/propose_team/' + name + '/' + key).then(res => res.json()).then(res => setMessage(res.message))\n  }\n\n  const vote = (vote) => {\n    fetch('/server/game/vote/' + name + '/' + key + '/' + vote)\n  }\n\n  // https://stackoverflow.com/questions/13237421/how-to-generate-random-words-in-javascript\n  // https://stackoverflow.com/questions/30650961/functional-way-to-iterate-over-range-es6-7\n  const randels = (array, num) => (\n    [...Array(num)].map((_, i) => array[Math.floor(Math.random() * array.length)]).join('')\n  )\n\n  const render_vote = (vote) => vote === 'approve' ? 'âœ…' : vote === 'disapprove' ? 'ðŸ›‘' : '...'\n\n  const hammer = () => (gameState.captain + 4 - gameState.skips) % players.length;\n\n  let players_html = null;\n  // eslint-disable-next-line\n  let roles_html = null;\n\n  switch (mode) {\n    case 'lobby':\n      players_html = players.map(player => (\n        <tr key={player}>\n          <td><button onClick={() => kick(player)}>Kick</button></td>\n          <td>{player}</td>\n        </tr>\n      ))\n      let roles_html = Object.keys(roles).map(role => (\n        <tr key={role}>\n          <td><button onClick={() => toggle(role)}>{roles[role] ? \"disable\" : \"enable\"}</button></td>\n          <td className={roles[role] ? 'activeRole' : 'inactiveRole'}>{role}</td>\n        </tr>\n      ))\n      custom_content = (\n        <div>\n          <h1>Players</h1>\n          <table><tbody>{players_html}</tbody></table>\n          <h1>Roles</h1>\n          <table><tbody>{roles_html}</tbody></table>\n          <button onClick={() => startGame()}>Start Game!</button>\n          <p>{message}</p>\n        </div>\n      )\n      break\n    case 'game':\n      const captain = myState.i === gameState.captain\n      const player_approve_box = (player, i) => (\n        <button onClick={() => toggleProposal(player)} className={gameState.proposal.includes(player) ? 'active' : 'inactive'}>{gameState.proposal && gameState.proposal.includes(player) ? \"Remove\" : \"Add\"}</button>\n      )\n      const player_info_box = (player, i) => (\n        <p>{gameState.actors.includes(player) ? 'Acted' : gameState.proposal.includes(player) ? 'On team' : ''}</p>\n      )\n      const did_vote_box = (player, i) =>  (\n        <td>{i === myState.i ? render_vote(myState.vote) : gameState.votes.includes(player) ? \"VotedðŸ“¨\" : \"...\"}</td>\n      )\n      const vote_details_box = (player, i) => (\n        <td>{render_vote(gameState.votes[i])}</td>\n      )\n      players_html = players.map((player, i) => (\n        <tr key={player}>\n          <td>{captain && !gameState.proposed ? player_approve_box(player, i) : player_info_box(player, i)}</td>\n          <td>{\n            [(i === myState.i ? ' (me)' : ''),\n             (i === hammer() ? 'ðŸ”¨' : ''),\n             (i === gameState.captain ? 'ðŸŸ ' : '')].join('')\n          }</td>\n          <td className={i === myState.i ? '' : ''}>{player}</td>\n          <td>{myState.roles[i]}</td>\n          {gameState.votes.length === players.length ? vote_details_box(player, i) : did_vote_box(player, i)}\n        </tr>\n        ))\n      const captain_view = <p><button onClick={proposeTeam}>Propose the team</button></p>\n      const approve_view = (\n        <div>\n          <button onClick={() => vote('approve')} className={myState.vote ==='approve' ? 'active' : 'inactive'}>Approve</button>\n          <button onClick={() => vote('disapprove')} className={myState.vote ==='disapprove' ? 'active' : 'inactive'}>Reject</button>\n        </div>\n      )\n      const failButton = !myState['good'] ? <button onClick={() => fetch('/server/game/act/' + name + '/' + key + '/fail')} className='fail'>Fail</button> : null\n      const act_view = (\n        <div>\n          <button onClick={() => fetch('/server/game/act/' + name + '/' + key + '/success')} className='succeed'>Succeed</button>\n          {failButton}\n        </div>\n      )\n      const render_round = (round) => (\n        (gameState.successes.includes(round) ? \"W\" : gameState.fails.includes(round) ? \"L\" : \"_\") + \" \"\n      )\n      const render_roundreq = (round) => {\n        return gameState.rounds[round] + \", \"\n      }\n      custom_content = (\n        <div>\n          <p>{[0, 1, 2, 3, 4].map(round => render_round(round))}</p>\n          <p>Players required per mission (.1 = 2 fails needed): {[0, 1, 2, 3, 4].map(round => render_roundreq(round))}</p>\n          <p>Rejected teams: {gameState.skips}</p> \n          <h1>Players</h1>\n          <table className=\"table\"><tbody>{players_html}</tbody></table>\n          {gameState.assassin_mode ? '' : gameState.approved ? (gameState.proposal.includes(name) && myState.act === '' ? act_view : \"It's time for a vote!\") : gameState.proposed ? approve_view : captain ? captain_view : \"\"}\n          <p>{message}</p>\n        </div>\n      )\n      break\n    default:\n      break\n  }\n\n  const login = () => {\n    const name = document.getElementById('name').value;\n    const password = document.getElementById('password').value;\n    window.location.pathname = \"/user/\" + name + '-' + password\n  }\n\n  if (!auth) {\n    const default_name = (randels(['king', 'queen', 'duke', 'jester',\n                                   'squire', 'knight',], 1)\n                          + ' of '\n                          + randels([...'1234567890'], 2))\n                          + ' '\n                          + randels(['clubs', 'spades', 'hearts', 'clovers',\n                                     'diamonds', 'dollars', 'realms'])\n    const default_password = (randels(['gradient', 'hessian', 'jacobian',\n                                       'sigmoid', 'relu', 'tanh',], 1)\n                              + randels([...'1234567890'], 3))\n    custom_content = (\n      <div>\n        <p>Authentication failed! Don't give up, try logging in with a new username and password</p>\n        <p>Name</p>\n        <textarea id=\"name\" rows=\"1\" defaultValue={default_name}></textarea>\n        <p>Password</p>\n        <textarea id=\"password\" rows=\"1\" defaultValue={default_password}></textarea>\n        <button onClick={login}>Log in</button>\n      </div>\n    )\n  }\n\n  const reset_name = mode === 'lobby' ? 'unreset' : 'reset'\n  const reset_button = auth ? <button onClick={() => fetch('/server/' + reset_name)}>{reset_name}</button> : null\n\n  return (\n    <Container className=\"justify-content-md-center\">\n      <h3>{gameState['hypertext']}</h3>\n        {reset_button}\n        Mode {mode}, Kicked: {kicked.map(kick => kick + \", \")}\n        {custom_content}\n    </Container>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n      integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n      crossOrigin=\"anonymous\"\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}